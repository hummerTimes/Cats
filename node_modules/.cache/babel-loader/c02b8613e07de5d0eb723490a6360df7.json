{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nexport function fetchCatImage(_x) {\n  return _fetchCatImage.apply(this, arguments);\n}\n\nfunction _fetchCatImage() {\n  _fetchCatImage = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(a) {\n    var res, data, _data, url;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(\"https://api.thecatapi.com/v1/images/search?breed_ids=\".concat(a.id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context.sent;\n            _data = _slicedToArray(data, 1), url = _data[0];\n            return _context.abrupt(\"return\", url);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[0, 11]]);\n  }));\n  return _fetchCatImage.apply(this, arguments);\n}\n\nexport function fetchCatBreeds() {\n  return _fetchCatBreeds.apply(this, arguments);\n}\n\nfunction _fetchCatBreeds() {\n  _fetchCatBreeds = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var res, data, pArray, users, array;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch(\"https://api.thecatapi.com/v1/breeds\");\n\n          case 3:\n            res = _context2.sent;\n            _context2.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context2.sent;\n            pArray = data.map(function (a) {\n              return fetchCatImage(a);\n            });\n            _context2.next = 10;\n            return Promise.all(pArray);\n\n          case 10:\n            users = _context2.sent;\n            array = [];\n            data.forEach(function (element, index) {\n              var item = {\n                'description': element['description'],\n                'name': element['description'],\n                'url': users[index].url\n              };\n              array.push(item);\n            });\n            console.log(array);\n            return _context2.abrupt(\"return\", users);\n\n          case 17:\n            _context2.prev = 17;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this, [[0, 17]]);\n  }));\n  return _fetchCatBreeds.apply(this, arguments);\n}","map":{"version":3,"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\react-podcasts\\src\\API.js"],"names":["fetchCatImage","a","fetch","id","res","json","data","url","console","log","fetchCatBreeds","pArray","map","Promise","all","users","array","forEach","element","index","item","push"],"mappings":";;;AACA,gBAAsBA,aAAtB;AAAA;AAAA;;;;;2BAAO,iBAA6BC,CAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEmBC,KAAK,gEAAyDD,CAAC,CAACE,EAA3D,EAFxB;;AAAA;AAEOC,YAAAA,GAFP;AAAA;AAAA,mBAGoBA,GAAG,CAACC,IAAJ,EAHpB;;AAAA;AAGOC,YAAAA,IAHP;AAAA,mCAIeA,IAJf,MAIQC,GAJR;AAAA,6CAKQA,GALR;;AAAA;AAAA;AAAA;AAODC,YAAAA,OAAO,CAACC,GAAR;;AAPC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAWL,gBAAsBC,cAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEeR,KAAK,uCAFpB;;AAAA;AAEGE,YAAAA,GAFH;AAAA;AAAA,mBAGgBA,GAAG,CAACC,IAAJ,EAHhB;;AAAA;AAGGC,YAAAA,IAHH;AAIGK,YAAAA,MAJH,GAIYL,IAAI,CAACM,GAAL,CAAS,UAAAX,CAAC;AAAA,qBAAID,aAAa,CAACC,CAAD,CAAjB;AAAA,aAAV,CAJZ;AAAA;AAAA,mBAKiBY,OAAO,CAACC,GAAR,CAAYH,MAAZ,CALjB;;AAAA;AAKGI,YAAAA,KALH;AAOGC,YAAAA,KAPH,GAOW,EAPX;AASHV,YAAAA,IAAI,CAACW,OAAL,CAAa,UAASC,OAAT,EAAkBC,KAAlB,EAAyB;AACpC,kBAAMC,IAAI,GAAG;AAAC,+BAAeF,OAAO,CAAC,aAAD,CAAvB;AAAyC,wBAAQA,OAAO,CAAC,aAAD,CAAxD;AAA0E,uBAAQH,KAAK,CAACI,KAAD,CAAL,CAAaZ;AAA/F,eAAb;AACAS,cAAAA,KAAK,CAACK,IAAN,CAAWD,IAAX;AACD,aAHD;AAMAZ,YAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AAfG,8CAiBID,KAjBJ;;AAAA;AAAA;AAAA;AAmBHP,YAAAA,OAAO,CAACC,GAAR;;AAnBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["\r\nexport async function fetchCatImage(a) {\r\n    try{\r\n        const res = await fetch(`https://api.thecatapi.com/v1/images/search?breed_ids=${a.id}`)\r\n        const data = await res.json();\r\n        const [url] = data; \r\n        return url;\r\n    }catch(err){\r\n      console.log(err)\r\n   }\r\n  }\r\n  \r\n  export async function fetchCatBreeds() {\r\n    try{\r\n      const res = await fetch(`https://api.thecatapi.com/v1/breeds`);\r\n      const data = await res.json();\r\n      const pArray = data.map(a => fetchCatImage(a)); \r\n      const users = await Promise.all(pArray); \r\n      \r\n      const array = [];\r\n\r\n      data.forEach(function(element, index) {\r\n        const item = {'description': element['description'] , 'name': element['description'] , 'url' : users[index].url};\r\n        array.push(item);\r\n      });\r\n      \r\n\r\n      console.log(array)\r\n\r\n      return users;\r\n    }catch(err){\r\n      console.log(err)\r\n   }\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}