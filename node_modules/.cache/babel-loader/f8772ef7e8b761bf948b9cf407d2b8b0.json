{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\src\\\\Cats.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport Item from './Item';\nimport { ThemeContext, PodcastContext } from './app-context';\nimport ReactTable from 'react-table';\nimport \"react-table/react-table.css\";\n\nfunction fetchCatBreedsAPI() {\n  return _fetchCatBreedsAPI.apply(this, arguments);\n}\n\nfunction _fetchCatBreedsAPI() {\n  _fetchCatBreedsAPI = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var res, data, result, limit, resImages, dataImages, resultImages;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch('https://api.thecatapi.com/v1/breeds');\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context.sent;\n            result = data.map(function (a) {\n              return {\n                'description': a.description,\n                'name': a.name\n              };\n            });\n            limit = result.length;\n            _context.next = 11;\n            return fetch(\"https://api.thecatapi.com/v1/images/search?limit=\".concat(limit));\n\n          case 11:\n            resImages = _context.sent;\n            _context.next = 14;\n            return res.json();\n\n          case 14:\n            dataImages = _context.sent;\n            resultImages = dataImages.map(function (a) {\n              return {\n                'description': a.description\n              };\n            });\n            console.log(result);\n            return _context.abrupt(\"return\", result);\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[0, 20]]);\n  }));\n  return _fetchCatBreedsAPI.apply(this, arguments);\n}\n\nfunction fetchCatImagesAPI(_x) {\n  return _fetchCatImagesAPI.apply(this, arguments);\n}\n\nfunction _fetchCatImagesAPI() {\n  _fetchCatImagesAPI = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(limit) {\n    var res, data, result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch(\"https://api.thecatapi.com/v1/images/search?limit=\".concat(limit));\n\n          case 3:\n            res = _context2.sent;\n            _context2.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context2.sent;\n            result = data.map(function (a) {\n              return [a.name, a.description];\n            }); // console.log(data)\n\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this, [[0, 10]]);\n  }));\n  return _fetchCatImagesAPI.apply(this, arguments);\n}\n\nexport var TableCats = function TableCats(data) {\n  // const data = [{\n  //   name: 'Tanner Linsley',\n  //   age: 26,\n  //   friend: {\n  //     name: 'Jason Maurer',\n  //     age: 23,\n  //   }\n  // }];\n  var columns = [{\n    Header: 'Photo',\n    accessor: 'name' // String-based value accessors!\n\n  }, {\n    Header: 'Name',\n    accessor: 'description',\n    Cell: function Cell(props) {\n      return React.createElement(\"span\", {\n        className: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, props.value, \"AAA\");\n    } // Custom cell components!\n\n  }, {\n    id: 'friendName',\n    // Required because our accessor is not a string\n    Header: 'Description',\n    accessor: function accessor(d) {\n      return d.friend.name;\n    } // Custom value accessors!\n\n  }, {\n    Header: function Header(props) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Friend Age\");\n    },\n    // Custom header components!\n    accessor: 'friend.age'\n  }];\n  return React.createElement(ReactTable, {\n    data: data,\n    columns: columns,\n    defaultPageSize: 20,\n    className: \"-striped -highlight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  });\n};\n\nvar App = function App() {\n  var podcast = useContext(PodcastContext);\n  var theme = useContext(ThemeContext);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var _useState3 = useState('Test value'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      changeValue = _useState4[1];\n\n  useEffect(function () {\n    fetchCatBreedsAPI();\n    fetchCatImagesAPI();\n  }, []);\n\n  var handleValueChange = function handleValueChange(e) {\n    changeValue(e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card \".concat(theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, TableCats(), React.createElement(Item, {\n    label: \"Podcast\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, podcast)), React.createElement(Item, {\n    label: \"TableBreeds\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Item, {\n    label: \"Counter value is \".concat(count),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Click me\")), React.createElement(Item, {\n    label: \"\".concat(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: value,\n    onChange: handleValueChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\react-podcasts\\src\\Cats.js"],"names":["React","useContext","useState","useEffect","Item","ThemeContext","PodcastContext","ReactTable","fetchCatBreedsAPI","fetch","res","json","data","result","map","a","description","name","limit","length","resImages","dataImages","resultImages","console","log","fetchCatImagesAPI","TableCats","columns","Header","accessor","Cell","props","value","id","d","friend","App","podcast","theme","count","setCount","changeValue","handleValueChange","e","target"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport Item from './Item';\r\nimport { ThemeContext, PodcastContext } from './app-context';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nasync function fetchCatBreedsAPI() {\r\n  try{\r\n    const res = await fetch('https://api.thecatapi.com/v1/breeds');\r\n    const data = await res.json();\r\n    const result = data.map(a => {return {'description' : a.description, 'name' : a.name }});    \r\n    const limit = result.length;\r\n\r\n    const resImages = await fetch(`https://api.thecatapi.com/v1/images/search?limit=${limit}`);\r\n    const dataImages = await res.json();\r\n    const resultImages = dataImages.map(a => {return {'description' : a.description }});    \r\n\r\nconsole.log(result)\r\n    return result;\r\n  }catch(err){\r\n    console.log(err)\r\n }\r\n}\r\n\r\nasync function fetchCatImagesAPI(limit) {\r\n  try{\r\n    const res = await fetch(`https://api.thecatapi.com/v1/images/search?limit=${limit}`);\r\n    const data = await res.json();\r\n    const result = data.map(a => [a.name, a.description]);    \r\n    // console.log(data)\r\n  }catch(err){\r\n    console.log(err)\r\n }\r\n}\r\n\r\nexport const TableCats = (data) => {\r\n  // const data = [{\r\n  //   name: 'Tanner Linsley',\r\n  //   age: 26,\r\n  //   friend: {\r\n  //     name: 'Jason Maurer',\r\n  //     age: 23,\r\n  //   }\r\n  // }];\r\n \r\n  const columns = [{\r\n    Header: 'Photo',\r\n    accessor: 'name' // String-based value accessors!\r\n  }, {\r\n    Header: 'Name',\r\n    accessor: 'description',\r\n    Cell: props => <span className='number'>{props.value}AAA</span> // Custom cell components!\r\n  }, {\r\n    id: 'friendName', // Required because our accessor is not a string\r\n    Header: 'Description',\r\n    accessor: d => d.friend.name // Custom value accessors!\r\n  }, {\r\n    Header: props => <span>Friend Age</span>, // Custom header components!\r\n    accessor: 'friend.age'\r\n  }]\r\n \r\n  return (\r\n      <ReactTable\r\n        data={data}\r\n        columns={columns}\r\n        defaultPageSize={20}\r\n        className=\"-striped -highlight\"   \r\n      />\r\n  );\r\n}\r\n\r\nconst App = () => {\r\n  const podcast = useContext(PodcastContext);\r\n  const theme = useContext(ThemeContext);\r\n  const [count, setCount] = useState(0);\r\n  const [value, changeValue] = useState('Test value');\r\n \r\n  useEffect(() => {\r\n    fetchCatBreedsAPI();\r\n    fetchCatImagesAPI();\r\n  }, []);\r\n\r\n  const handleValueChange = (e) => {\r\n    changeValue(e.target.value);\r\n  }  \r\n\r\n  return (\r\n    <div className={`card ${theme}`}>\r\n        {TableCats()}\r\n      <Item label=\"Podcast\">\r\n        <h4>{podcast}</h4>\r\n      </Item>\r\n      <Item label=\"TableBreeds\">\r\n      \r\n      </Item>\r\n\r\n      <Item label={`Counter value is ${count}`}>\r\n        <button onClick={() => setCount(count + 1)}>Click me</button>\r\n      </Item>\r\n\r\n      <Item label={`${value}`}>\r\n        <input\r\n          value={value}\r\n          onChange={handleValueChange}\r\n        />\r\n      </Item>\r\n{/* \r\n      <Item label=\"Fetch User\">\r\n        <img src={cat} alt=\"Logo\" />;\r\n      </Item> */}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}