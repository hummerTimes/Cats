{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\src\\\\App.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport Item from './Item';\nimport { ThemeContext, PodcastContext } from './app-context';\n\nvar App = function App() {\n  var podcast = useContext(PodcastContext);\n  var theme = useContext(ThemeContext);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var _useState3 = useState('Test value'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      changeValue = _useState4[1];\n\n  var _useState5 = useState(window.innerWidth),\n      _useState6 = _slicedToArray(_useState5, 2),\n      width = _useState6[0],\n      setWidth = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      user = _useState8[0],\n      setUser = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      data = _useState10[0],\n      dataSet = _useState10[1];\n\n  var handleValueChange = function handleValueChange(e) {\n    changeValue(e.target.value);\n  };\n\n  useEffect(function () {\n    document.title = value;\n  });\n  useEffect(function () {\n    var handleWidth = function handleWidth() {\n      return setWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleWidth);\n    return function () {\n      window.removeEventListener('resize', handleWidth);\n    };\n  });\n\n  function fetchMyAPI() {\n    return _fetchMyAPI.apply(this, arguments);\n  }\n\n  function _fetchMyAPI() {\n    _fetchMyAPI = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var res, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch('api/data');\n\n            case 2:\n              res = _context2.sent;\n              _context2.next = 5;\n              return res.json();\n\n            case 5:\n              response = _context2.sent;\n              console.log(response);\n              dataSet(response);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    return _fetchMyAPI.apply(this, arguments);\n  }\n\n  useEffect(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var response, data, _data$results, item;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://api.randomuser.me/');\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context.sent;\n            _data$results = _slicedToArray(data.results, 1), item = _data$results[0];\n            setUser(item);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  })), [count]);\n  useEffect(function () {\n    fetchMyAPI();\n  }, [count]);\n  return React.createElement(\"div\", {\n    className: \"card \".concat(theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Item, {\n    label: \"Podcast\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, podcast)), React.createElement(Item, {\n    label: \"Counter value is \".concat(count),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Click me\")), React.createElement(Item, {\n    label: \"\".concat(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: value,\n    onChange: handleValueChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Item, {\n    label: \"Browser window is\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, width)), React.createElement(Item, {\n    label: \"Fetch User\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, user ? \"\".concat(user.name.first, \" \").concat(user.name.last) : '')));\n};\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\react-podcasts\\src\\App.js"],"names":["React","useContext","useState","useEffect","Item","ThemeContext","PodcastContext","App","podcast","theme","count","setCount","value","changeValue","window","innerWidth","width","setWidth","user","setUser","data","dataSet","handleValueChange","e","target","document","title","handleWidth","addEventListener","removeEventListener","fetchMyAPI","fetch","res","json","response","console","log","results","item","name","first","last"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport Item from './Item';\r\nimport { ThemeContext, PodcastContext } from './app-context';\r\n\r\nconst App = () => {\r\n  const podcast = useContext(PodcastContext);\r\n  const theme = useContext(ThemeContext);\r\n  const [count, setCount] = useState(0);\r\n  const [value, changeValue] = useState('Test value');\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [user, setUser] = useState(null);\r\n  const [data, dataSet] = useState(false)\r\n\r\n\r\n  const handleValueChange = (e) => {\r\n    changeValue(e.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = value;\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleWidth = () => setWidth(window.innerWidth)\r\n    window.addEventListener('resize', handleWidth);\r\n    return () => {\r\n      window.removeEventListener('resize', handleWidth);\r\n    };\r\n  });\r\n\r\n  async function fetchMyAPI() {\r\n    let res = await fetch('api/data')\r\n    let response = await res.json()\r\n    console.log(response);\r\n    dataSet(response)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    const response = await fetch('https://api.randomuser.me/');\r\n    const data = await response.json();\r\n    const [item] = data.results;\r\n    setUser(item);\r\n  }, [count]);\r\n\r\n  \r\n  useEffect(() => {\r\n    fetchMyAPI();\r\n  }, [count]);\r\n\r\n  return (\r\n    <div className={`card ${theme}`}>\r\n      <Item label=\"Podcast\">\r\n        <h4>{podcast}</h4>\r\n      </Item>\r\n\r\n      <Item label={`Counter value is ${count}`}>\r\n        <button onClick={() => setCount(count + 1)}>Click me</button>\r\n      </Item>\r\n\r\n      <Item label={`${value}`}>\r\n        <input\r\n          value={value}\r\n          onChange={handleValueChange}\r\n        />\r\n      </Item>\r\n\r\n      <Item label={`Browser window is`}>\r\n        <h4>{width}</h4>\r\n      </Item>\r\n\r\n      <Item label=\"Fetch User\">\r\n        <div>{user ? `${user.name.first} ${user.name.last}` : ''}</div>\r\n      </Item>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}