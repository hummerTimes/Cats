{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nexport function fetchCatBreedsAPI(_x) {\n  return _fetchCatBreedsAPI.apply(this, arguments);\n}\n\nfunction _fetchCatBreedsAPI() {\n  _fetchCatBreedsAPI = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(a) {\n    var res, data, _data, url;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(\"https://api.thecatapi.com/v1/images/search?breed_ids=\".concat(a.id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context.sent;\n            _data = _slicedToArray(data, 1), url = _data[0];\n            return _context.abrupt(\"return\", {\n              'url': url\n            });\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[0, 11]]);\n  }));\n  return _fetchCatBreedsAPI.apply(this, arguments);\n}\n\nexport function fetchCatImagesAPI(_x2) {\n  return _fetchCatImagesAPI.apply(this, arguments);\n}\n\nfunction _fetchCatImagesAPI() {\n  _fetchCatImagesAPI = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(limit) {\n    var res, data, result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch(\"https://api.thecatapi.com/v1/images/search?limit=\".concat(limit));\n\n          case 3:\n            res = _context2.sent;\n            _context2.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context2.sent;\n            result = data.map(function (a) {\n              return [a.name, a.description];\n            });\n            console.log(data);\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this, [[0, 11]]);\n  }));\n  return _fetchCatImagesAPI.apply(this, arguments);\n}","map":{"version":3,"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\react-podcasts\\src\\API.js"],"names":["fetchCatBreedsAPI","a","fetch","id","res","json","data","url","console","log","fetchCatImagesAPI","limit","result","map","name","description"],"mappings":";;;AACA,gBAAsBA,iBAAtB;AAAA;AAAA;;;;;2BAAO,iBAAiCC,CAAjC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEmBC,KAAK,gEAAyDD,CAAC,CAACE,EAA3D,EAFxB;;AAAA;AAEOC,YAAAA,GAFP;AAAA;AAAA,mBAGoBA,GAAG,CAACC,IAAJ,EAHpB;;AAAA;AAGOC,YAAAA,IAHP;AAAA,mCAIeA,IAJf,MAIQC,GAJR;AAAA,6CAKQ;AAAC,qBAAQA;AAAT,aALR;;AAAA;AAAA;AAAA;AAODC,YAAAA,OAAO,CAACC,GAAR;;AAPC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAWL,gBAAsBC,iBAAtB;AAAA;AAAA;;;;;2BAAO,kBAAiCC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEeT,KAAK,4DAAqDS,KAArD,EAFpB;;AAAA;AAEGP,YAAAA,GAFH;AAAA;AAAA,mBAGgBA,GAAG,CAACC,IAAJ,EAHhB;;AAAA;AAGGC,YAAAA,IAHH;AAIGM,YAAAA,MAJH,GAIYN,IAAI,CAACO,GAAL,CAAS,UAAAZ,CAAC;AAAA,qBAAI,CAACA,CAAC,CAACa,IAAH,EAASb,CAAC,CAACc,WAAX,CAAJ;AAAA,aAAV,CAJZ;AAKHP,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AALG;AAAA;;AAAA;AAAA;AAAA;AAOHE,YAAAA,OAAO,CAACC,GAAR;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["\r\nexport async function fetchCatBreedsAPI(a) {\r\n    try{\r\n        const res = await fetch(`https://api.thecatapi.com/v1/images/search?breed_ids=${a.id}`)\r\n        const data = await res.json();\r\n        const [url] = data;  \r\n        return {'url' : url};\r\n    }catch(err){\r\n      console.log(err)\r\n   }\r\n  }\r\n  \r\n  export async function fetchCatImagesAPI(limit) {\r\n    try{\r\n      const res = await fetch(`https://api.thecatapi.com/v1/images/search?limit=${limit}`);\r\n      const data = await res.json();\r\n      const result = data.map(a => [a.name, a.description]);    \r\n      console.log(data)\r\n    }catch(err){\r\n      console.log(err)\r\n   }\r\n  }"]},"metadata":{},"sourceType":"module"}