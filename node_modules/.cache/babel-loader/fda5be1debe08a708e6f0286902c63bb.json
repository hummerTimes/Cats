{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\src\\\\App.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport ReactTable from 'react-table';\nimport Item from './Item';\nimport { ThemeContext, PodcastContext } from './app-context';\n\nvar App = function App() {\n  var podcast = useContext(PodcastContext);\n  var theme = useContext(ThemeContext);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var _useState3 = useState('Test value'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      changeValue = _useState4[1]; // const [width, setWidth] = useState(window.innerWidth);\n\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cats = _useState6[0],\n      setImage = _useState6[1];\n\n  var handleValueChange = function handleValueChange(e) {\n    changeValue(e.target.value);\n  }; // useEffect(() => {\n  //   document.title = value;\n  // });\n  // useEffect(() => {\n  //   const handleWidth = () => setWidth(window.innerWidth)\n  //   window.addEventListener('resize', handleWidth);\n  //   return () => {\n  //     window.removeEventListener('resize', handleWidth);\n  //   };\n  // });\n\n\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var response, data, _data, udata, url;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch('https://api.thecatapi.com/v1/breeds');\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            data = _context.sent;\n            _data = _slicedToArray(data, 1), udata = _data[0];\n            url = udata.url;\n            console.log(data);\n            setImage(url);\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[0, 13]]);\n  }))();\n\n  return React.createElement(\"div\", {\n    className: \"card \".concat(theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Item, {\n    label: \"Podcast\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, podcast)), React.createElement(Item, {\n    label: \"Counter value is \".concat(count),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Item, {\n    label: \"\".concat(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: value,\n    onChange: handleValueChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(Item, {\n    label: \"Browser window is\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Item, {\n    label: \"Fetch User\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: cats,\n    alt: \"Logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), \";\"));\n};\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\react-podcasts\\src\\App.js"],"names":["React","useContext","useState","useEffect","ReactTable","Item","ThemeContext","PodcastContext","App","podcast","theme","count","setCount","value","changeValue","cats","setImage","handleValueChange","e","target","fetch","response","json","data","udata","url","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,MAAMC,OAAO,GAAGR,UAAU,CAACM,cAAD,CAA1B;AACA,MAAMG,KAAK,GAAGT,UAAU,CAACK,YAAD,CAAxB;;AAFgB,kBAGUJ,QAAQ,CAAC,CAAD,CAHlB;AAAA;AAAA,MAGTS,KAHS;AAAA,MAGFC,QAHE;;AAAA,mBAIaV,QAAQ,CAAC,YAAD,CAJrB;AAAA;AAAA,MAITW,KAJS;AAAA,MAIFC,WAJE,kBAKhB;;;AALgB,mBAMSZ,QAAQ,CAAC,KAAD,CANjB;AAAA;AAAA,MAMTa,IANS;AAAA,MAMHC,QANG;;AAQhB,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAO;AAC/BJ,IAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASN,KAAV,CAAX;AACD,GAFD,CARgB,CAYhB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE0BO,KAAK,CAAC,qCAAD,CAF/B;;AAAA;AAESC,YAAAA,QAFT;AAAA;AAAA,mBAGsBA,QAAQ,CAACC,IAAT,EAHtB;;AAAA;AAGSC,YAAAA,IAHT;AAAA,mCAImBA,IAJnB,MAIUC,KAJV;AAKSC,YAAAA,GALT,GAKeD,KAAK,CAACC,GALrB;AAMGC,YAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAP,YAAAA,QAAQ,CAACS,GAAD,CAAR;AAPH;AAAA;;AAAA;AAAA;AAAA;AASGC,YAAAA,OAAO,CAACC,GAAR;;AATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAaC,SACE;AAAK,IAAA,SAAS,iBAAUjB,KAAV,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,OAAL,CADF,CADF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,6BAAsBE,KAAtB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,YAAKE,KAAL,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAEA,KADT;AAEE,IAAA,QAAQ,EAAEI,iBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,EAgBE,oBAAC,IAAD;AAAM,IAAA,KAAK,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAmBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEF,IAAV;AAAgB,IAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,MAnBF,CADF;AA2BD,CAhED;;AAkEA,eAAeP,GAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport ReactTable from 'react-table';\r\n\r\nimport Item from './Item';\r\nimport { ThemeContext, PodcastContext } from './app-context';\r\n\r\nconst App = () => {\r\n  const podcast = useContext(PodcastContext);\r\n  const theme = useContext(ThemeContext);\r\n  const [count, setCount] = useState(0);\r\n  const [value, changeValue] = useState('Test value');\r\n  // const [width, setWidth] = useState(window.innerWidth);\r\n  const [cats, setImage] = useState(false);\r\n\r\n  const handleValueChange = (e) => {\r\n    changeValue(e.target.value);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   document.title = value;\r\n  // });\r\n\r\n  // useEffect(() => {\r\n  //   const handleWidth = () => setWidth(window.innerWidth)\r\n  //   window.addEventListener('resize', handleWidth);\r\n  //   return () => {\r\n  //     window.removeEventListener('resize', handleWidth);\r\n  //   };\r\n  // });\r\n\r\n ( async function () {\r\n    try{\r\n      const response = await fetch('https://api.thecatapi.com/v1/breeds');\r\n      const data = await response.json();\r\n      const [udata] = data;\r\n      const url = udata.url;\r\n      console.log(data)\r\n      setImage(url);  \r\n    }catch(err){\r\n      console.log(err)\r\n   }\r\n  }());\r\n  \r\n  return (\r\n    <div className={`card ${theme}`}>\r\n      <Item label=\"Podcast\">\r\n        <h4>{podcast}</h4>\r\n      </Item>\r\n\r\n      <Item label={`Counter value is ${count}`}>\r\n        {/* <button onClick={() => setCount(count + 1)}>Click me</button> */}\r\n      </Item>\r\n\r\n      <Item label={`${value}`}>\r\n        <input\r\n          value={value}\r\n          onChange={handleValueChange}\r\n        />\r\n      </Item>\r\n\r\n      <Item label={`Browser window is`}>\r\n      </Item>\r\n\r\n      <Item label=\"Fetch User\">\r\n        <img src={cats} alt=\"Logo\" />;\r\n        {/* <div>{user ? `${user.name.first} ${user.name.last}` : ''}</div> */}\r\n      </Item>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}