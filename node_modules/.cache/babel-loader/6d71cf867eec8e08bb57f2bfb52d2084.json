{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\src\\\\Cats.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport Item from './Item';\nimport { ThemeContext, PodcastContext } from './app-context';\nimport ReactTable from 'react-table';\nimport \"react-table/react-table.css\";\nimport { fetchCatBreeds } from './API';\nimport matchSorter from 'match-sorter';\nvar dataS = [{\n  description: 'Jason Maurer',\n  name: 'Tanner Linsley',\n  url: '26'\n}];\n\nvar customOptionsFilter = function customOptionsFilter(_ref, pNames) {\n  var filter = _ref.filter,\n      _onChange = _ref.onChange;\n  return React.createElement(\"select\", {\n    onChange: function onChange(event) {\n      return _onChange(event.target.value);\n    },\n    style: {\n      width: \"100%\"\n    },\n    value: filter ? filter.value : \"all\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"all\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Show All\"), pNames.map(function (k) {\n    return React.createElement(\"option\", {\n      key: k.toString(),\n      value: k,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, k);\n  }));\n};\n\nexport var TableCats = function TableCats(_ref2) {\n  var data = _ref2.data;\n  var dataPreview = data === null ? dataS : data;\n  var pNames = dataPreview.map(function (a) {\n    return a.name;\n  });\n  return React.createElement(ReactTable, {\n    data: dataPreview,\n    defaultPageSize: 20,\n    className: \"-striped -highlight\",\n    filterable: true,\n    columns: [{\n      Header: 'Name',\n      accessor: 'url',\n      filterMethod: function filterMethod(filter, rows) {\n        return matchSorter(rows, filter.value, {\n          keys: [\"name\"]\n        });\n      },\n      filterAll: true,\n      Cell: function Cell(props) {\n        return React.createElement(\"img\", {\n          src: props.value,\n          alt: 'Image...',\n          width: \"200px\",\n          height: \"200px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      } // Custom cell components!\n\n    }, {\n      Header: 'Breed',\n      accessor: 'name',\n      filterMethod: function filterMethod(filter, row) {\n        if (filter.value === \"all\") {\n          return true;\n        }\n\n        return row[filter.id] === filter.value;\n      },\n      Filter: function Filter() {\n        return function (_ref3) {\n          var filter = _ref3.filter,\n              onChange = _ref3.onChange;\n          return customOptionsFilter({\n            filter: filter,\n            onChange: onChange\n          }, pNames);\n        };\n      }\n    }, {\n      Header: 'Description',\n      accessor: 'description'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  });\n};\n\nvar getDataCats = function getDataCats() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataTable = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    fetchCatBreeds().then(function (result) {\n      setData(result);\n    });\n  }, []);\n  return dataTable;\n};\n\nvar App = function App() {\n  var podcast = useContext(PodcastContext);\n  var theme = useContext(ThemeContext);\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      count = _useState4[0],\n      setCount = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      changeValue = _useState6[1];\n\n  var data = getDataCats();\n\n  var handleValueChange = function handleValueChange(e) {\n    changeValue(e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card \".concat(theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Item, {\n    label: \"Search by Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: value,\n    onChange: handleValueChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(TableCats, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(Item, {\n    label: \"Podcast\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, podcast)), React.createElement(Item, {\n    label: \"Counter value is \".concat(count),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Click me\")));\n};\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\react-podcasts\\src\\Cats.js"],"names":["React","useContext","useState","useEffect","Item","ThemeContext","PodcastContext","ReactTable","fetchCatBreeds","matchSorter","dataS","description","name","url","customOptionsFilter","pNames","filter","onChange","event","target","value","width","map","k","toString","TableCats","data","dataPreview","a","Header","accessor","filterMethod","rows","keys","filterAll","Cell","props","row","id","Filter","getDataCats","dataTable","setData","then","result","App","podcast","theme","count","setCount","changeValue","handleValueChange","e"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport Item from './Item';\r\nimport { ThemeContext, PodcastContext } from './app-context';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\nimport { fetchCatBreeds} from './API';\r\nimport matchSorter from 'match-sorter'\r\n\r\nconst dataS = [{\r\n    description: 'Jason Maurer',\r\n    name: 'Tanner Linsley',\r\n    url: '26'\r\n  }];\r\n\r\n  const customOptionsFilter = ({filter, onChange}, pNames) => {\r\n    return(\r\n        <select\r\n        onChange={event => onChange(event.target.value)}\r\n        style={{ width: \"100%\" }}\r\n        value={filter ? filter.value : \"all\"}\r\n        > \r\n        <option value=\"all\">Show All</option>\r\n        {\r\n          pNames.map( k => {\r\n          return <option key={k.toString()} value={k}>{k}</option>\r\n          })\r\n        }\r\n        </select>\r\n    )\r\n  }\r\n\r\nexport const TableCats = ({data}) => \r\n  { \r\n    const dataPreview = data === null ? dataS : data;\r\n    const pNames = dataPreview.map(a => a.name);\r\n    \r\n    return (\r\n      <ReactTable\r\n        data={dataPreview} \r\n        defaultPageSize={20}\r\n        className=\"-striped -highlight\"   \r\n        filterable\r\n        columns = {[{\r\n            Header: 'Name',\r\n            accessor: 'url' ,\r\n            filterMethod: (filter, rows) =>\r\n              matchSorter(rows, filter.value, { keys: [\"name\"] }),\r\n            filterAll: true ,\r\n            Cell: props => <img src={props.value} alt={'Image...'} width='200px' height='200px'/> // Custom cell components!\r\n            }, {\r\n            Header: 'Breed',\r\n            accessor: 'name',\r\n            filterMethod: (filter, row) => {\r\n              if (filter.value === \"all\") {\r\n                return true;\r\n              }\r\n              return row[filter.id] === filter.value;\r\n            },\r\n            Filter: () => ({filter, onChange}) => customOptionsFilter({filter, onChange}, pNames)\r\n            }, {\r\n            Header: 'Description',\r\n            accessor: 'description'\r\n            }]}\r\n      />\r\n  );}\r\n\r\nconst getDataCats = () =>{\r\n    const [dataTable, setData] = useState(null);\r\n \r\n    useEffect(() => {\r\n        fetchCatBreeds().then((result) => {\r\n        setData(result);\r\n    });\r\n    }, []);\r\n    return dataTable;\r\n}\r\n\r\nconst App = () => {\r\n  const podcast = useContext(PodcastContext);\r\n  const theme = useContext(ThemeContext);\r\n  const [count, setCount] = useState(0);\r\n  const [value, changeValue] = useState('');\r\n  const data = getDataCats(); \r\n\r\n  const handleValueChange = (e) => {\r\n    changeValue(e.target.value);\r\n  }  \r\n\r\n  return (\r\n    <div className={`card ${theme}`}>    \r\n      <Item label={`Search by Name`}>\r\n        <input\r\n          value={value}\r\n          onChange={handleValueChange}\r\n        />\r\n      </Item>\r\n\r\n       <Item>\r\n       <TableCats data = {data}/>\r\n       </Item> \r\n\r\n      <Item label=\"Podcast\">\r\n        <h4>{podcast}</h4>\r\n      </Item>\r\n\r\n      <Item label={`Counter value is ${count}`}>\r\n        <button onClick={() => setCount(count + 1)}>Click me</button>\r\n      </Item>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}