{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Documents\\\\GitHub\\\\react-podcasts\\\\src\\\\Cats.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport Item from './Item';\nimport { ThemeContext, PodcastContext } from './app-context';\nimport ReactTable from 'react-table';\nimport \"react-table/react-table.css\";\nimport { fetchCatBreeds } from './API';\nimport matchSorter from 'match-sorter';\nvar dataS = [{\n  description: 'Jason Maurer',\n  name: 'Tanner Linsley',\n  url: '26'\n}];\nexport var TableCats = function TableCats(_ref) {\n  var data = _ref.data;\n  return React.createElement(ReactTable, {\n    data: data === null ? dataS : data,\n    defaultPageSize: 20,\n    className: \"-striped -highlight\",\n    filterable: true,\n    defaultFilterMethod: function defaultFilterMethod(filter, row) {\n      return false;\n    },\n    columns: [{\n      Header: 'Photo',\n      accessor: 'url',\n      Cell: function Cell(props) {\n        return React.createElement(\"img\", {\n          src: props.value,\n          alt: 'Image...',\n          width: \"200px\",\n          height: \"200px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      } // Custom cell components!\n\n    }, {\n      Header: 'Name',\n      accessor: 'name',\n      filterMethod: function filterMethod(filter, rows) {\n        return matchSorter(rows, filter.value, {\n          keys: [\"name\"]\n        });\n      },\n      filterAll: true\n    }, {\n      Header: 'Description',\n      accessor: 'description'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  });\n};\n\nvar getDataCats = function getDataCats() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataTable = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    fetchCatBreeds().then(function (result) {\n      setData(result);\n    });\n  }, []);\n  return dataTable;\n};\n\nvar App = function App() {\n  var podcast = useContext(PodcastContext);\n  var theme = useContext(ThemeContext);\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      count = _useState4[0],\n      setCount = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      changeValue = _useState6[1];\n\n  var data = getDataCats();\n\n  var handleValueChange = function handleValueChange(e) {\n    changeValue(e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card \".concat(theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Item, {\n    label: \"Search by Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: value,\n    onChange: handleValueChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(TableCats, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(Item, {\n    label: \"Podcast\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, podcast)), React.createElement(Item, {\n    label: \"Counter value is \".concat(count),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Click me\")));\n};\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\react-podcasts\\src\\Cats.js"],"names":["React","useContext","useState","useEffect","Item","ThemeContext","PodcastContext","ReactTable","fetchCatBreeds","matchSorter","dataS","description","name","url","TableCats","data","filter","row","Header","accessor","Cell","props","value","filterMethod","rows","keys","filterAll","getDataCats","dataTable","setData","then","result","App","podcast","theme","count","setCount","changeValue","handleValueChange","e","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,6BAAP;AACA,SAASC,cAAT,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEE,IAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,WAAW,EAAE,cADA;AAEbC,EAAAA,IAAI,EAAE,gBAFO;AAGbC,EAAAA,GAAG,EAAE;AAHQ,CAAD,CAAd;AAMF,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAEC,IAAF,QAAEA,IAAF;AAAA,SAEnB,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEA,IAAI,KAAK,IAAT,GAAgBL,KAAhB,GAAwBK,IADhC;AAEE,IAAA,eAAe,EAAE,EAFnB;AAGE,IAAA,SAAS,EAAC,qBAHZ;AAIE,IAAA,UAAU,MAJZ;AAKE,IAAA,mBAAmB,EAAE,6BAACC,MAAD,EAASC,GAAT;AAAA,aACjB,KADiB;AAAA,KALvB;AAOE,IAAA,OAAO,EAAI,CAAC;AACRC,MAAAA,MAAM,EAAE,OADA;AAERC,MAAAA,QAAQ,EAAE,KAFF;AAGRC,MAAAA,IAAI,EAAE,cAAAC,KAAK;AAAA,eAAI;AAAK,UAAA,GAAG,EAAEA,KAAK,CAACC,KAAhB;AAAuB,UAAA,GAAG,EAAE,UAA5B;AAAwC,UAAA,KAAK,EAAC,OAA9C;AAAsD,UAAA,MAAM,EAAC,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OAHH,CAG8E;;AAH9E,KAAD,EAIJ;AACHJ,MAAAA,MAAM,EAAE,MADL;AAEHC,MAAAA,QAAQ,EAAE,MAFP;AAGHI,MAAAA,YAAY,EAAE,sBAACP,MAAD,EAASQ,IAAT;AAAA,eACZf,WAAW,CAACe,IAAD,EAAOR,MAAM,CAACM,KAAd,EAAqB;AAAEG,UAAAA,IAAI,EAAE,CAAC,MAAD;AAAR,SAArB,CADC;AAAA,OAHX;AAKDC,MAAAA,SAAS,EAAE;AALV,KAJI,EAUJ;AACHR,MAAAA,MAAM,EAAE,aADL;AAEHC,MAAAA,QAAQ,EAAE;AAFP,KAVI,CAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFmB;AAAA,CAAlB;;AA0BP,IAAMQ,WAAW,GAAG,SAAdA,WAAc,GAAK;AAAA,kBACQzB,QAAQ,CAAC,IAAD,CADhB;AAAA;AAAA,MACd0B,SADc;AAAA,MACHC,OADG;;AAGrB1B,EAAAA,SAAS,CAAC,YAAM;AACZK,IAAAA,cAAc,GAAGsB,IAAjB,CAAsB,UAACC,MAAD,EAAY;AAClCF,MAAAA,OAAO,CAACE,MAAD,CAAP;AACH,KAFG;AAGH,GAJQ,EAIN,EAJM,CAAT;AAKA,SAAOH,SAAP;AACH,CATD;;AAWA,IAAMI,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,MAAMC,OAAO,GAAGhC,UAAU,CAACK,cAAD,CAA1B;AACA,MAAM4B,KAAK,GAAGjC,UAAU,CAACI,YAAD,CAAxB;;AAFgB,mBAGUH,QAAQ,CAAC,CAAD,CAHlB;AAAA;AAAA,MAGTiC,KAHS;AAAA,MAGFC,QAHE;;AAAA,mBAIalC,QAAQ,CAAC,EAAD,CAJrB;AAAA;AAAA,MAIToB,KAJS;AAAA,MAIFe,WAJE;;AAKhB,MAAMtB,IAAI,GAAGY,WAAW,EAAxB;;AAEA,MAAMW,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAO;AAC/BF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASlB,KAAV,CAAX;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,iBAAUY,KAAV,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAEZ,KADT;AAEE,IAAA,QAAQ,EAAEgB,iBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAIvB,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CARH,EAYE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKkB,OAAL,CADF,CAZF,EAgBE,oBAAC,IAAD;AAAM,IAAA,KAAK,6BAAsBE,KAAtB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAhBF,CADF;AAuBD,CAlCD;;AAoCA,eAAeH,GAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport Item from './Item';\r\nimport { ThemeContext, PodcastContext } from './app-context';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\nimport { fetchCatBreeds} from './API';\r\nimport matchSorter from 'match-sorter'\r\n\r\n  const dataS = [{\r\n    description: 'Jason Maurer',\r\n    name: 'Tanner Linsley',\r\n    url: '26'\r\n  }];\r\n\r\nexport const TableCats = ({data}) => \r\n  (\r\n      <ReactTable\r\n        data={data === null ? dataS : data} \r\n        defaultPageSize={20}\r\n        className=\"-striped -highlight\"   \r\n        filterable\r\n        defaultFilterMethod={(filter, row) =>\r\n            false}\r\n        columns = {[{\r\n            Header: 'Photo',\r\n            accessor: 'url' ,\r\n            Cell: props => <img src={props.value} alt={'Image...'} width='200px' height='200px'/> // Custom cell components!\r\n            }, {\r\n            Header: 'Name',\r\n            accessor: 'name',\r\n            filterMethod: (filter, rows) =>\r\n              matchSorter(rows, filter.value, { keys: [\"name\"] }),\r\n              filterAll: true  \r\n            }, {\r\n            Header: 'Description',\r\n            accessor: 'description'\r\n            }]}\r\n      />\r\n  );\r\n\r\nconst getDataCats = () =>{\r\n    const [dataTable, setData] = useState(null);\r\n \r\n    useEffect(() => {\r\n        fetchCatBreeds().then((result) => {\r\n        setData(result);\r\n    });\r\n    }, []);\r\n    return dataTable;\r\n}\r\n\r\nconst App = () => {\r\n  const podcast = useContext(PodcastContext);\r\n  const theme = useContext(ThemeContext);\r\n  const [count, setCount] = useState(0);\r\n  const [value, changeValue] = useState('');\r\n  const data = getDataCats(); \r\n\r\n  const handleValueChange = (e) => {\r\n    changeValue(e.target.value);\r\n  }  \r\n\r\n  return (\r\n    <div className={`card ${theme}`}>    \r\n      <Item label={`Search by Name`}>\r\n        <input\r\n          value={value}\r\n          onChange={handleValueChange}\r\n        />\r\n      </Item>\r\n\r\n       <Item>\r\n       <TableCats data = {data}/>\r\n       </Item> \r\n\r\n      <Item label=\"Podcast\">\r\n        <h4>{podcast}</h4>\r\n      </Item>\r\n\r\n      <Item label={`Counter value is ${count}`}>\r\n        <button onClick={() => setCount(count + 1)}>Click me</button>\r\n      </Item>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}